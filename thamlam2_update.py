# -*- coding: utf-8 -*-
"""thamlam2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-AVhOkKWfvxWariRND-akVCJHcR9ke52
"""

#Tham lam 2: đến nơi gần điểm xuất phát nhất

#input
import sys
import time

f = open('./data/data_20_15.txt', 'r')
[N, M] = [int(x) for x in f.readline().split()]

Q = []
for i in range(0, N):
    Q_ = [int(x) for x in f.readline().split()]
    Q.append(Q_)

d = []
for i in range(0, M+1):
    d_ = [int(x) for x in f.readline().split()]
    d.append(d_)
    
q = [int(x) for x in f.readline().split()]
print('q({0}) = {1}'.format(N,q), end='-->')

#biến
v = [False] * (M+1)   #lưu vết
x = [99999]*(M+1)     #mảng lưu hàng i ma trận d[M+1][M+1]
s = []                #mảng lưu quãng đường
k_ = []               #mảng lưu lộ trình
k_.append(0)


#số hàng cần lấy phải nhỏ hơn số hàng hiện có trong kho
for i in range(0,N):
    if(q[i] <= sum(Q[i])):
        continue
    else:
        print('STOP\nCheck input value!!')
        sys.exit()
#tìm index tiếp theo
def s_min(x,k):
    i = x.index(min(x))
    
    if(v[i]==False):
        k = i
    else:
        x[x.index(min(x))] = 99999
        k = x.index(min(x))
    
    s.append(x[k])
    return k         

def TRY(k):
    #bắt đầu tại điểm 0
    v[k]=True
    for i in range(0,M+1):
        x[i]=d[k][i]
        x[k]=99999 
    
    k = s_min(x,k)
    v[k] = True
    k_.append(k)
    update(k)
    TRY(k)
  
#ktra số hàng còn lại sau mỗi lẫn di chuyển
 
def update(k):
  for i in range(0,N):
      if (q[i] >= Q[i][k-1]) :
          q[i] = q[i] - Q[i][k-1]
      else:
          q[i] = 0
  print(q, end='-->')
  if(q.count(0) == N ):

      print('STOP\n', k_, sep='')
      print('s_min =', sum(s))
      end_time = time.time()
      print('Time:', (end_time - start_time))
      sys.exit()
    
start_time = time.time()
TRY(0)

